@use 'sass:map';
@use 'node_modules/@angular/material' as mat;

@mixin _theme-property($theme, $property, $hue) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $background: map.get($theme, background);
  $foreground: map.get($theme, foreground);

  &.mat-primary {
    #{$property}: mat.get-color-from-palette($primary, $hue);
  }
  &.mat-accent {
    #{$property}: mat.get-color-from-palette($accent, $hue);
  }
  &.mat-warn {
    #{$property}: mat.get-color-from-palette($warn, $hue);
  }

  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {
    &.mat-button-disabled {
      $palette: if($property == 'color', $foreground, $background);
      #{$property}: mat.get-color-from-palette($palette, disabled-button);
    }
  }
}


@mixin color($theme, $isDarkTheme) {
  $color-config: mat.get-color-config($theme);
  $foreground: map.get($color-config, foreground);
  $background: map.get($color-config, background);

  app-circle-button {
    color: mat.get-color-from-palette($foreground, text);
    background-color: mat.get-color-from-palette($background, raised-button);

    @include _theme-property($color-config, 'color', default-contrast);
    @include _theme-property($color-config, 'background-color', default);
  }
}


@mixin theme($theme, $isDarkTheme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme, $isDarkTheme);
  }
}
